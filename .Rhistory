quit
exit
bue
bye
library(swirl)
swirl()
trace
traceback
library(swirl)
rm(list=ls())
swirl()
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
matrix(2,2)
matrix(2,4)
matrix(4,4)
matrix(rnorm,2,4)
deb <- matrix(c(1,3,4,6),2,2)
deb
cachesolve(deb)
cacheSolve(deb)
Rafa <- makeCacheMatrix(deb)
Rafa <- makeCacheMatrix(deb, ..)
Rafa <- makeCacheMatrix()
source('~/Coursera/week3 R.R')
makevector(5)
Vector1 <- makeVector(5)
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
Rafa <- makeCacheMatrix(deb)
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
Rafa <- makeCacheMatrix(deb)
deb
Rafa
Rafa.get
Rafa$get()
deb
Rafa$getinverse()
Rafa$setinverse()
cacheSolve(Rafa)
Rafa$getinverse()
cacheSolve(Rafa)
cacheSolve(Rafa)
Rafa <- makeCacheMatrix(deb)
cacheSolve(Rafa)
cacheSolve(Rafa)
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
deb <- matrix(c(2,4,3,9),2,2)
rafa<-makeCacheMatrix(deb)
rafa
rafa$get()
rafa$getinverse()
cacheSolve(rafa)
cacheSolve(rafa)
deb <- matrix(c(2,4,3,9),2,2)
cacheSolve(rafa)
rafa<-makeCacheMatrix(deb)
rafa$getinverse()
cacheSolve(rafa)
solve()
?solve
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
deb <- matrix(c(2,4,3,9),2,2)
rafa<-makeCacheMatrix(deb)
rafa$getinverse()
rafa$get()
cacheSolve(rafa)
cacheSolve(rafa)
rafa<-makeCacheMatrix(deb)
cacheSolve(rafa)
rafa<-makeCacheMatrix(deb)
cacheSolve(rafa)
cacheSolve(rafa)
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rep(0:1, each = 5)
x
e <- rnorm(10, 0, 20)
e
y <- 0.5 + 2 * x + e
y
plot(x,y)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
library(swirl)
swirl()
5+7
x<-5+7
x
y <- x-3
y
z<-c(1.1,9,3.14)
?c()
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x<-9
ls()
dir()
?list,files
?list.files
args(list.files)
old.dir <- getwd()
dir.create(testdir)
args(dir.create)
dir.create("testdir")
setwd(testdir)
setwd("testdir)
")"
;
.
fd
q
1
library(swirl)
swirl()
colors()
sample(colors())
sample(colors(),10)
pal(colorRamp(c("red","blue")))
pal<-(colorRamp(c("red","blue")))
pal<-colorRamp(c("red","blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1<-colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0xcc
p2<-colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?rgb
p3<-colorRampPalette(c("blue","green"),alpha=.5)
p3(5)
plot(x,y,pch=19,col=rgb(0,.5,.5))
plot(x,y,pch=19,col=rgb(0,.5,.5,.3))
cols<-brewer.pal(3,"BuGn")
showMe(cols)
pal<-colorRampPalette(cols)
showMe(pal(20))
image(volcano,col=pal(20))
image(volcano,col=p1(20))
str(mpg)
qplot(displ,hwy,mpg)
qplot(displ,hwy,mpg)
qplot(displ,hwy,data=mpg)
qplot(displ,hwy,data=mpg, color=drv)
qplot(displ,hwy,data=mpg, color=drv, geom=c("point","smooth"))
qplot(y=hwy,data=mpg, color=drv)
myhigh
qplot(drv,hwy,data=mpg, geom="boxplot")
qplot(drv,hwy,data=mpg, geom="boxplot",color=manufacturer)
qplot(hwy,data=mpg, fill=drv)
qplot(displ,hwy,data=mpg,facets=.~drv)
qplot(hwy,data=mpg,facets=drv~.,bindwidth=2)
qplot(hwy,data=mpg,facets=drv~.,binwidth=2)
qplot(displ,hwy,data=mpg,geom=c("point","smooth",facets=.~drv)
)
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets=.~drv)
g<-ggplot(data=mpg,aes(displ,hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink",size=4,alpha=1/2)
g+geom_point(size=4,alpha=1/2,aes(color=drv))
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement",y="Hwy Mileage")
g+geom_point(aes(color=drv),size=2,alpha=1/2)+geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g+geom_point(aes(color=drv))+theme_bw(base_family = "Times")
plot(myx,myy,type="l",ylim = c(-3,3))
g<-ggplot(testdat,aes(x=myx,t=myy))
g<-ggplot(testdat,aes(x=myx,y=myy))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g<-ggplot(mpg,aes(x=displ,y=hwy),color=factor(year))
g<-ggplot(mpg,aes(x=displ,y=hwy,color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl,margins = TRUE)
g+geom_point()+facet_grid(drv~cyl,margins = TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")
g+geom_point()+facet_grid(drv~cyl,margins = TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
str(diamonds)
qplot(price,data=diamonds)
range(diamons$price)
range(diamonds$price)
qplot(price,data=diamonds,binwidth=18497/30)
brk
counts
qplot(price,data=diamonds,binwidth=18497/30,fill=cut)
qplot(price,data=diamonds,geom="density")
qplot(price,data=diamonds,geom="density",color=cut)
qplot(carat,price,data=diamonds)
qplot(carat,price,data=diamonds,shape=cut)
qplot(carat,price,data=diamonds,color=cut)
qplot(carat,price,data=diamonds,color=cut,geom_smooth(method="lm"))
qplot(carat,price,data=diamonds,color=cut,geom_smooth="lm")
qplot(carat,price,data=diamonds,color=cut,geom_smooth=c("smooth",lm"))
)
l
;
''
))))
qplot(carat,price,data=diamonds,color=cut,geom=c("lm","smooth"))
help()
?qplot
qplot(carat,price,data=diamonds,color=cut,geom_smooth="lm")
qplot(carat,price,data=diamonds,color=cut,geom="lm")
qplot(carat,price,data=diamonds,color=cut,geom="smooth")
qplot(carat,price,data=diamonds,color=cut)+geom_smooth((method="lm")
)
qplot(carat,price,data=diamonds, color=cut) + geom_smooth(method="lm")
qplot(carat,price,data=diamonds, color=cut,facets=.~cut) + geom_smooth(method="lm")
g<-ggplot(data=diamons,aes(depth,price))
g<-ggplot(data=diamonds,aes(depth,price))
summary(g)
g+geom_point(alpha=1/3)
cutpoint<-quantile(diamonds$carat,seq(0,1,lenght=4),na.rm = TRUE)
cutpoint<-quantile(diamonds$carat,seq(0,1,length=4),na.rm = TRUE)
cutpoints<-quantile(diamonds$carat,seq(0,1,length=4),na.rm = TRUE)
cutpoints
diamonds$car2<-cut(diamonds$carat,cutpoints)
g<-ggplot(data=diamonds,aes(depth,price))
g+geom_point(alpha=1/3)+facet_grid(cut~car2))
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm",size=3,color="pink")
ggplot(diamonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?xyplot
?lines
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
?par()
?trellis.par.set()
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
?geom
library(ggplot2)
library(ggplot2movies)
library(movies)
ggplot(diamonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
p<-ggplot(diamonds,aes(carat,price))
print(p)
library(ggplot2)
data(movies)
data(ggplot2movies)
qplot(votes, rating, data = movies)
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)+geom_smooth()
bye
exit
library(swirl)
swirl()
prcomp(scale(mat))
rbinom(1,size=1,prob-0.5)
rbinom(1,size=1,prob=0.5)
rbinom(1,size=1,prob=0.5)
rbinom(1,size=1,prob=0.5)
rbinom(1,size=1,prob=0.5)
rbinom(1,size=1,prob=0.5)
rbinom(1,size=1,prob=0.5)
rbinom(1,size=1,prob=0.5)
rbinom(1,size=1,prob=0.5)
rbinom(1,size=1,prob=0.5)
?rbinom
rbinom(2,size=1,prob=0.5)
rbinom(2,size=1,prob=0.5)
rbinom(2,size=1,prob=0.5)
rbinom(1,size=2,prob=0.5)
rbinom(1,size=2,prob=0.5)
rbinom(1,size=2,prob=0.5)
rbinom(1,size=2,prob=0.5)
rbinom(2,size=1,prob=0.5)
rbinom(1,size=2,prob=0.5)
rbinom(1,size=2,prob=0.5)
rbinom(1,size=2,prob=0.5)
rbinom(10,size=2,prob=0.5)
rbinom(100,size=2,prob=0.5)
rep(c(0,3),each=5)
rep(c(0,3),5)
rep(c(0,3,4),5)
rep(c(0,3,4),each=5)
install.packages("RCurl")
library(XML)
library(RCurl)
filexml<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
Datos<-getURL(filexml)
doc<-xmlParse(Datos)
xpathSApply(doc,"zipcode",xmlAttrs)
xpathSApply(doc,"zipcode",xmlValue)
list()
doc
head(doc)
rootNode<-xmlRoot(doc)
xmlName(rootNode)
urlcsv<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(urlcsv)
download.file(urlcsv,destifile="1.csv")
download.file(urlcsv,destfile="1.csv")
DT<-fread("1.csv")
library(data.table)
DT<-fread("1.csv")
proc.time(tapply(DT$pwgtp15,DT$SEX,mean))
proc.time()
tapply(DT$pwgtp15,DT$SEX,mean)
proc.time()
proc.time()
DT[,mean(pwgtp15),by=SEX]
proc.time()
proc.time()
sapply(split(DT$pwgtp15,DT$SEX),mean)
proc.time()
proc.time()
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
proc.time()
proc.time()
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
proc.time()
proc.time()
mean(DT$pwgtp15,by=DT$SEX)
proc.time()
rootNode
xmlSApply(rootNode,xmlValue)
xmlSApply(rootNode,"//zipcode",xmlValue)
xpathSApply(rootNode,"//zipcode",xmlValue)
zips<-xpathSApply(rootNode,"//zipcode",xmlValue)
sum(zips)
summary(zips)
count(zips=="21231"")
count(zips=="21231")
count(zips=="21231")
library(plyr)
count(zips, 1)
filecsv<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
csv1<-read.csv("1.csv")
count(csv1,VAR)
count(csv1,VAL)
head(csv1)
count(csv1,csv1$VAL)
?count
count(df=csv1,vars=csv1$VAL)
csv1<-subset(csv1,VAL==24)
csv1<-subset(csv1,csv1$VAL==24)
count(csv1,csv1$VAL)
count(csv1)
csv1<-read.csv(filecsv)
csv1<-subset(csv1,csv1$VAL=="24")
count(csv1)
summary(csv1)
str(csv1)
setwd("~/Coursera/RepData_PeerAssessment1")
unzip("activity.zip")
activity <- read.csv("activity.csv", header= TRUE)
summary(activity)
hist(activity)
hist(activity$steps)
hist(activity$steps,activity$date)
hist(activity$steps~activity$date)
hist(activity$steps,"date")
?hist()
install.packages("ggplot2")
library(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
hist(activity$steps)
View(activity)
View(activity)
activityperday<-aggregate(activity$steps, by=activity$date, FUN=sum)
activityperday<-aggregate(activity$steps, by=list(Date=activity$date), FUN=sum)
View(activityperday)
hist(activityperday)
hist(activityperday$x)
hist(activityperday$Date)
hist(activityperday$Date)
?hist())
?hist()
hist(activityperday$Date, xlab = "Step Ranges")
hist(activityperday$x, xlab = "Step Ranges")
hist(activityperday$x, xlab = "Step Ranges", title="Histogram of Step Ranges")
hist(activityperday$x, xlab = "Step Ranges", main="Histogram of Step Ranges")
hist(activityperday$x, xlab = "Step Ranges", main="Histogram of Step Ranges")
mean(activityperday$x)
?mean()
mean(activityperday$x,na.rm = FALSE)
mean(activityperday$x,na.rm = TRUE)
median(activityperday$x,na.rm = TRUE)
median(activityperday$x,na.rm = TRUE)
mean<-round(mean(activityperday$x,na.rm = TRUE),digits = 2)
mean
median(activityperday$x,na.rm = TRUE)
View(activityperday)
View(activity)
plot(activity$interval,activity$steps, type = "l")
activityperinterval<-aggregate(activity$steps, by=list(Interval=activity$interval), FUN=sum)
activityperinterval<-aggregate(activity$steps, by=list(Interval=activity$interval), FUN=average)
activityperinterval<-aggregate(activity$steps, by=list(Interval=activity$interval), FUN=mean)
View(activity)
View(activityperinterval)
activityperinterval<-aggregate(activity$steps, by=list(Interval=activity$interval), FUN=mean, na.rm = TRUE)
View(activityperinterval)
plot(activityperinterval$x,activityperinterval$Interval, type = "l")
plot(activityperinterval$Interval,activityperinterval$x, type = "l")
View(activityperinterval)
plot(activityperinterval$x,activityperinterval$Interval, type = "l")
plot(activityperinterval$Interval,activityperinterval$x, type = "l")
plot(activityperinterval$Interval,activityperinterval$x, type = "l", xlab = "Day Interval", ylab = "Average Steps", title = "Average daily activity pattern")
plot(activityperinterval$Interval,activityperinterval$x, type = "l", xlab = "Day Interval", ylab = "Average Steps", main = "Average daily activity pattern")
warning()
plot(activityperinterval$Interval,activityperinterval$x, type = "l", xlab = "Day Interval", ylab = "Average Steps", main = "Average daily activity pattern")
max_interval<-max(activityperinterval$Interval)
max_interval<-max(activityperinterval$Interval)
max_interval
max_interval<-max(activityperinterval$x)
max_interval
activityperinterval[max_interval,]
activityperinterval[,max_interval]
subset(activityperinterval,x==max_interval)
subset(activityperinterval,x==max_interval)$interval
subset(activityperinterval,x==max_interval)$Interval
max_steps<-max(activityperinterval$x)
max_interval<-subset(activityperinterval,x==max_steps)$Interval
max_interval
sum(is.na(activity$steps))
sum(is.na(activity$date))
sum(is.na(activity$interval))
which(is.na(activity$steps))
which(is.na(activity$steps))[,2]
which(is.na(activity$steps,arr.ind=TRUE))
which(is.na(activity$steps, arr.ind=TRUE))
which(is.na(activity$steps), arr.ind=TRUE)
which(is.na(activity$steps), arr.ind=TRUE)[,1]
which(is.na(activity$steps), arr.ind=TRUE)[,2]
which(is.na(activity$steps))
View(activity)
activity[which(is.na(activity$steps)),3]
View(activityperinterval)
activity[which(is.na(activity$steps)),3]
activityperinterval[activityperinterval$Interval==activity[which(is.na(activity$steps)),3]]
activityperinterval[activityperinterval$Interval==activity[which(is.na(activity$steps)),3],2]
activity_No_NAs<-activity
activity_No_NAs$steps[which(is.na(activity_No_NAs$steps))]<-mean(activity_No_NAs$steps na.rm=TRUE)
activity_No_NAs$steps[which(is.na(activity_No_NAs$steps))]<-mean(activity_No_NAs$steps, na.rm=TRUE)
View(activity_No_NAs)
activityperday_No_NAs<-aggregate(activity_No_NAs$steps, by=list(Date=activity_No_NAs$date), FUN=sum)
hist(activityperday_No_NAs$x, xlab = "Step Ranges", main="Histogram of Step Ranges")
mean_activity_No_NAs<-round(mean(activityperday_No_NAs$x,na.rm = TRUE),digits = 2)
median_activity_No_NAs<-median(activityperday_No_NAs$x,na.rm = TRUE)
activity1<-activity
weekdays(activity1$date)
library(timeDate)
install.packages(timeDate)
activity1$WeekPortion <- ifelse(weekdays(activity1$date) %in% c("Saturday", "Sunday"), "Weekend", "Weekday")
activity1$date<-as.Date(activity1$date)
week_days<-c('Monday','Tuesday','Wednesday','Thursday','Friday')
activity1$WD<-factor((weekdays(activity1$date)) %in% week_days), levels=c(FALSE,TRUE), labels=c('Weekend','Weekday')
activity1$WD<-factor((weekdays(activity1$date) %in% week_days), levels=c(FALSE,TRUE), labels=c('Weekend','Weekday')
)
summary(activity1)
activity1<-activity_No_NAs
activity1$date<-as.Date(activity1$date)
week_days<-c('Monday','Tuesday','Wednesday','Thursday','Friday')
activity1$WD<-factor((weekdays(activity1$date) %in% week_days),
levels=c(FALSE,TRUE), labels=c('Weekend','Weekday'))
activityperintervalperWD<-aggregate(activity1$steps, by=list(Interval=activity1$interval,WD=activity1$WD), FUN=mean, na.rm = TRUE)
summary(activityperintervalperWD)
View(activityperinterval)
View(activityperintervalperWD)
library(lattice)
xyplot(interval~WD|x.WD.activityperintervalperWD,
main="Scatterplots by Cylinders and Gears",
ylab="Miles per Gallon", xlab="Car Weight")
xyplot(interval~x|activityperintervalperWD.WD.activityperintervalperWD,
main="Scatterplots by Cylinders and Gears",
ylab="Miles per Gallon", xlab="Car Weight")
activityperintervalperWD<-aggregate(activity1$steps, by=list(Interval=activity1$interval,WD=activity1$WD), FUN=mean, na.rm = TRUE)
?xyplot()
summary(activityperintervalperWD)
xyplot(X~Interval | WD, data = activityperintervalperWD)
xyplot(x~Interval | WD, data = activityperintervalperWD)
?plot()
xyplot(x~Interval | WD, data = activityperintervalperWD,layout = c(1, 2), type = "l", xlab = "Interval",
ylab = "Number of steps")
xyplot(x~Interval | WD, data = activityperintervalperWD,layout = c(1, 2), type = "l",
xlab = "Interval", ylab = "Number of steps")
